name: Java CI/CD Deploy

# Trigger on pushes or PRs to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Java 17 (Temurin) on the runner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Build the JAR with Gradle
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 4. Upload the JAR to EC2 via SCP
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}         # e.g. ec2-12-34-56-78.compute-1.amazonaws.com
          username: ${{ secrets.EC2_USER }}     # e.g. ec2-user or ubuntu
          key: ${{ secrets.EC2_KEY }}           # PEM private key content stored as a secret
          port: ${{ secrets.EC2_PORT }}         # usually 22
          source: build/libs/*.jar
          target: /home/${{ secrets.EC2_USER }}/app.jar

      # 5. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # DockerHub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}     # DockerHub access token (recommended)

      # 6. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: omurturgut/assignment:latest
